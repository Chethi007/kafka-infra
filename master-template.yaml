---
AWSTemplateFormatVersion: '2010-09-09'

Description: >
  This template deploys a highly available ECS cluster using an AutoScaling Group, with
  ECS hosts distributed across multiple Availability Zones.

  It then deploys a Zookeeper cluster from containers published in Docker Hub.

  TODO: move containers to ECR?

Parameters:
  EfsStackName:
    Description: CloudFormation Stack Name for EFS
    Type: String
  KeyName:
    Description: Key Pair name for SSH access
    Type: AWS::EC2::KeyPair::KeyName
  VPCId:
    Description: Choose which VPC this cluster should be deployed to
    Type: AWS::EC2::VPC::Id
  VPCCidrBlock:
    Description: VPC CIDR Block
    Type: String
  Subnets:
    Description: Choose three private subnets this cluster should be deployed to
    Type: List<AWS::EC2::Subnet::Id>
  InstanceType:
    Description: Which instance type should we use to build the ECS cluster?
    ConstraintDescription: Must be a valid EC2 instance type
    Type: String
    AllowedValues: [r4.xlarge]
    Default: r4.xlarge
  EFSMountPath:
    Description: Path at which to create the volume mount for EFS
    Type: String
    Default: /mnt/efs
  ASGMinSize:
    Description: Minimum size of ECS Auto Scaling Group
    Type: Number
    Default: 3
  ASGMaxSize:
    Description: Maximum size of ECS Auto Scaling Group
    Type: Number
    Default: 3
  ASGDesiredCapacity:
    Description: Desired Capacity of the ECS Auto Scaling Group
    Type: Number
    Default: 3
  RollingUpdateMinInService:
    Description: Minimum instance in service during rolling update
    Type: Number
    Default: 2
  ASGEventsTopic:
    Type: String
    Description: SNS topic to notify of ASG events
  MonitoringCidr:
    Type: String
    Description: CIDR range to allow access for monitoring
    Default: ''
  Project:
    Description: Project tag
    Type: String
    MinLength: 1
    ConstraintDescription: Must be a non-empty string
  Team:
    Description: Team tag
    Type: String
    MinLength: 1
    ConstraintDescription: Must be a non-empty string
  Environment:
    Description: Environment (dev|sandbox|prod)
    Type: String
    AllowedValues: ['dev','sandbox','prod']
    Default: dev
    ConstraintDescription: Must be one of dev|sandbox|prod.
  DomainName:
    Description: The domain name for Zookeeper hosts
    Type: String
    AllowedPattern: '(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\.)+[a-zA-Z]{2,63}$)'
    ConstraintDescription: Must be a valid domain name

Resources:
  ECS:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: ./ecs.yaml
      Parameters:
        KeyName: !Ref 'KeyName'
        VPCId: !Ref 'VPCId'
        VPCCidrBlock: !Ref 'VPCCidrBlock'
        Subnets: !Join [",", [!Select [0, !Ref 'Subnets'], !Select [1, !Ref 'Subnets'], !Select [2, !Ref 'Subnets']]]
        InstanceType: !Ref 'InstanceType'
        EFSFileSystemId: !ImportValue
          'Fn::Sub': '${EfsStackName}-FileSystemId'
        EFSMountPath: !Ref 'EFSMountPath'
        ASGMinSize: !Ref 'ASGMinSize'
        ASGMaxSize: !Ref 'ASGMaxSize'
        ASGDesiredCapacity: !Ref 'ASGDesiredCapacity'
        RollingUpdateMinInService: !Ref 'RollingUpdateMinInService'
        ASGEventsTopic: !Ref 'ASGEventsTopic'
        Project: !Ref 'Project'
        Team: !Ref 'Team'
        Environment: !Ref 'Environment'
  Zookeeper:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: ./zookeeper/zk-cluster.yaml
      Parameters:
        Cluster: !GetAtt 'ECS.Outputs.ClusterName'
        StackName: !Ref 'AWS::StackName'
        VPCId: !Ref 'VPCId'
        EFSMountPath: !Ref 'EFSMountPath'
        Subnets: !Join [",", [!Select [0, !Ref 'Subnets'], !Select [1, !Ref 'Subnets'], !Select [2, !Ref 'Subnets']]]
        Project: !Ref 'Project'
        Team: !Ref 'Team'
        Environment: !Ref 'Environment'
        DomainName: !Ref 'DomainName'
        MonitoringCidr: !Ref 'MonitoringCidr'
    DependsOn: 'ECS'

Outputs:
  ClusterName:
    Description: A reference to the ECS cluster
    Value: !GetAtt 'ECS.Outputs.ClusterName'
    Export:
      Name: !Sub '${AWS::StackName}-ClusterName'
  AutoScalingGroupName:
    Description: A reference to ECS AutoScaling Group Name
    Value: !GetAtt 'ECS.Outputs.AutoScalingGroupName'
    Export:
      Name: !Sub '${AWS::StackName}-AutoScalingGroupName'
  ServiceAutoScalingRole:
    Description: A reference to ECS service auto scaling role
    Value: !GetAtt 'ECS.Outputs.ServiceAutoScalingRole'
    Export:
      Name: !Sub '${AWS::StackName}-ServiceAutoScalingRole'
  ServiceSchedulerRole:
    Description: A reference to ECS service load balancing role
    Value: !GetAtt 'ECS.Outputs.ServiceSchedulerRole'
    Export:
      Name: !Sub '${AWS::StackName}-ServiceSchedulerRole'
  InstanceSecurityGroup:
    Description: The ID of the ecs container instance security group created
    Value: !GetAtt 'ECS.Outputs.InstanceSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-ECSSecurityGroupId'
  ServiceRole:
    Description: The ARN of the ECS service role
    Value: !GetAtt 'ECS.Outputs.ServiceRole'
    Export:
      Name: !Sub '${AWS::StackName}-EcsServiceRole'
  VpcId:
    Description: "Cluster's VPC Id"
    Value: !Ref 'VPCId'
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'
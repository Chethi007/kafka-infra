#!/bin/bash

set -e

if [ -n "${KAFKA_JMX_PORT}" ] || [ -n "${KAFKA_JMX_HOSTNAME}" ] || [ -n "${KAFKA_JMX_OPTS}" ];
then
    # JMX agent complains about malformed URLs and is not able to resolve ECS container
    # short hostnames. This will take care of the problem.
    echo "127.0.0.1     $HOSTNAME" | tee -a /etc/hosts
fi
echo "KAFKA_JMX_HOSTNAME: ${KAFKA_JMX_HOSTNAME}"
echo "KAFKA_JMX_PORT: ${KAFKA_JMX_PORT}"

if [ -z "${KAFKA_BROKER_RACK}" ];
then
    # Assume AWS environment and use the AZ as the rack name. This will help with spreading replicas of the same
    # partition across different AZs.
    export KAFKA_BROKER_RACK=$(curl http://169.254.169.254/latest/meta-data/placement/availability-zone)
fi
echo "KAFKA_BROKER_RACK: ${KAFKA_BROKER_RACK}"

if [ -n "${KAFKA_SSL_DIR}" ];
then
  # If SSL directory env variable is set, generate keystore and truststore
  if [ ! -f ${KAFKA_SSL_DIR}/kafka.truststore.jks ];
  then
    # If truststore doesn't exist, generate truststore
    keytool -import -alias ca -file ${KAFKA_SSL_DIR}/ca.crt -keystore ${KAFKA_SSL_DIR}/kafka.truststore.jks -storepass ${KAFKA_SSL_TRUSTSTORE_PASSWORD} -noprompt
    keytool -import -alias broker -file ${KAFKA_SSL_DIR}/broker.crt -keystore ${KAFKA_SSL_DIR}/kafka.truststore.jks -storepass ${KAFKA_SSL_TRUSTSTORE_PASSWORD} -noprompt
    cp ${KAFKA_SSL_DIR}/kafka.truststore.jks /etc/kafka/secrets/kafka.truststore.jks
  fi
  if [ ! -f ${KAFKA_SSL_DIR}/kafka.keystore.jks ];
  then
    # IF keystore doesn't exist, generate keystore
    keytool -importkeystore -deststorepass ${KAFKA_SSL_KEYSTORE_PASSWORD} -destkeypass ${KAFKA_SSL_KEY_PASSWORD} -destkeystore ${KAFKA_SSL_DIR}/kafka.keystore.jks -srckeystore ${KAFKA_SSL_DIR}/broker.p12 -srcstoretype PKCS12 -srcstorepass changeme -alias broker
    cp ${KAFKA_SSL_DIR}/kafka.keystore.jks /etc/kafka/secrets/kafka.keystore.jks
  fi
  echo ${KAFKA_SSL_TRUSTSTORE_PASSWORD} > /etc/kafka/secrets/broker_truststore_creds
  echo ${KAFKA_SSL_KEYSTORE_PASSWORD} > /etc/kafka/secrets/broker_keystore_creds
  echo ${KAFKA_SSL_KEY_PASSWORD} > /etc/kafka/secrets/broker_sslkey_creds
fi

exec "$@"

---
AWSTemplateFormatVersion: '2010-09-09'

Description: >
  This template deploys an ELB stack followed by a highly available ECS cluster using an AutoScaling Group, with
  ECS hosts distributed across multiple Availability Zones.
Parameters:
  EfsStackName:
    Description: CloudFormation Stack Name for EFS
    Type: String
  KeyName:
    Description: Key Pair name for SSH access
    Type: AWS::EC2::KeyPair::KeyName
  VPCId:
    Description: Choose which VPC this cluster should be deployed to
    Type: AWS::EC2::VPC::Id
  VPCCidrBlock:
    Description: VPC CIDR Block
    Type: String
  CertificateArn:
    Type: String
    Description: SSL certificates ARN to assign to ALB (See Certificate Mangager for the ARN)
  LoadBalancerType:
    Type: String
    Description: ECS ALB type
    Default: internal
    AllowedValues: [internet-facing, internal]
  PrivateSubnets:
    Description: Choose three private subnets this cluster should be deployed to
    Type: List<AWS::EC2::Subnet::Id>
  InstanceType:
    Description: Which instance type should we use to build the ECS cluster?
    ConstraintDescription: Must be a valid EC2 instance type
    Type: String
    AllowedValues: [r4.xlarge]
    Default: r4.xlarge
  EFSMountPath:
    Description: Path at which to create the volume mount for EFS
    Type: String
    Default: /mnt/efs
  EFSAccessSecurityGroup:
    Description: The Security Group that allows access to EFS
    Type: String
  ASGMinSize:
    Description: Minimum size of ECS Auto Scaling Group
    Type: Number
    Default: 3
  ASGMaxSize:
    Description: Maximum size of ECS Auto Scaling Group
    Type: Number
    Default: 3
  ASGDesiredCapacity:
    Description: Desired Capacity of the ECS Auto Scaling Group
    Type: Number
    Default: 3
  RollingUpdateMinInService:
    Description: Minimum instance in service during rolling update
    Type: Number
    Default: 2
  ASGEventsTopic:
    Type: String
    Description: SNS topic to notify of ASG events
  TargetGroupPrefix:
    Type: String
    MinLength: 1
    MaxLength: 24
    ConstraintDescription: Must be a unique prefix up to 24 characters to identify target groups for the cluster.
    Description: The prefix to use for target groups.
  InternalCidr0:
    Type: String
    Description: CIDR range to allow access to internal ELB
    Default: ''
  InternalCidr1:
    Type: String
    Description: CIDR range to allow access to internal ELB
    Default: ''
  InternalCidr2:
    Type: String
    Description: CIDR range to allow access to internal ELB
    Default: ''

  Project:
    Description: Project tag
    Type: String
    MinLength: 1
    ConstraintDescription: Must be a non-empty string
  Team:
    Description: Team tag
    Type: String
    MinLength: 1
    ConstraintDescription: Must be a non-empty string
  Environment:
    Description: Environment (dev|sandbox|prod)
    Type: String
    AllowedValues: ['dev','sandbox','prod']
    Default: dev
    ConstraintDescription: Must be one of dev|sandbox|prod.

Resources:
  ELB:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: ./elb.yaml
      Parameters:
        VPCId: !Ref 'VPCId'
        LoadBalancerSubnets: !Join [",", [!Select [0, !Ref 'PrivateSubnets'], !Select [1, !Ref 'PrivateSubnets'], !Select [2, !Ref 'PrivateSubnets']]]
        LoadBalancerType: !Ref 'LoadBalancerType'
        CertificateArn: !Ref 'CertificateArn'
        TargetGroupPrefix: !Ref 'TargetGroupPrefix'
        Project: !Ref 'Project'
        Team: !Ref 'Team'
        Environment: !Ref 'Environment'
        Cidr0: !Ref 'InternalCidr0'
        Cidr1: !Ref 'InternalCidr1'
        Cidr2: !Ref 'InternalCidr2'
  ECS:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: ./ecs.yaml
      Parameters:
        KeyName: !Ref 'KeyName'
        VPCId: !Ref 'VPCId'
        VPCCidrBlock: !Ref 'VPCCidrBlock'
        Subnets: !Join [",", [!Select [0, !Ref 'PrivateSubnets'], !Select [1, !Ref 'PrivateSubnets'], !Select [2, !Ref 'PrivateSubnets']]]
        InstanceType: !Ref 'InstanceType'
        EFSFileSystemId: !ImportValue
          'Fn::Sub': '${EfsStackName}-FileSystemId'
        EFSMountPath: !Ref 'EFSMountPath'
        EFSAccessSecurityGroup: !Ref 'EFSAccessSecurityGroup'
        ASGMinSize: !Ref 'ASGMinSize'
        ASGMaxSize: !Ref 'ASGMaxSize'
        ASGDesiredCapacity: !Ref 'ASGDesiredCapacity'
        RollingUpdateMinInService: !Ref 'RollingUpdateMinInService'
        ASGEventsTopic: !Ref 'ASGEventsTopic'
        Project: !Ref 'Project'
        Team: !Ref 'Team'
        Environment: !Ref 'Environment'

Outputs:
  Listener:
    Description: The ARN of the load balancer's listener
    Value: !GetAtt 'ELB.Outputs.Listener'
    Export:
      Name: !Sub '${AWS::StackName}-Listener'
  LoadBalancerDNS:
    Description: The dns name of the app load balancer for the service
    Value: !GetAtt 'ELB.Outputs.LoadBalancerDNS'
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerDNSName'
  LoadBalancerCanonicalHostedZoneID:
    Description: The hosted zone id of the app load balancer for the service
    Value: !GetAtt 'ELB.Outputs.LoadBalancerCanonicalHostedZoneID'
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerCanonicalHostedZoneID'
  LoadBalancerFullName:
    Description: The full name of the app load balancer
    Value: !GetAtt 'ELB.Outputs.LoadBalancerFullName'
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerFullName'
  ClusterName:
    Description: A reference to the ECS cluster
    Value: !GetAtt 'ECS.Outputs.ClusterName'
    Export:
      Name: !Sub '${AWS::StackName}-ClusterName'
  AutoScalingGroupName:
    Description: A reference to ECS AutoScaling Group Name
    Value: !GetAtt 'ECS.Outputs.AutoScalingGroupName'
    Export:
      Name: !Sub '${AWS::StackName}-AutoScalingGroupName'
  ServiceAutoScalingRole:
    Description: A reference to ECS service auto scaling role
    Value: !GetAtt 'ECS.Outputs.ServiceAutoScalingRole'
    Export:
      Name: !Sub '${AWS::StackName}-ServiceAutoScalingRole'
  ServiceSchedulerRole:
    Description: A reference to ECS service load balancing role
    Value: !GetAtt 'ECS.Outputs.ServiceSchedulerRole'
    Export:
      Name: !Sub '${AWS::StackName}-ServiceSchedulerRole'
  InstanceSecurityGroup:
    Description: The ID of the ecs container instance security group created
    Value: !GetAtt 'ECS.Outputs.InstanceSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-ECSSecurityGroupId'
  ServiceRole:
    Description: The ARN of the ECS service role
    Value: !GetAtt 'ECS.Outputs.ServiceRole'
    Export:
      Name: !Sub '${AWS::StackName}-EcsServiceRole'
  VpcId:
    Description: "Cluster's VPC Id"
    Value: !Ref 'VPCId'
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'

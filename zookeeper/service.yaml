---
AWSTemplateFormatVersion: '2010-09-09'

Description: Creates an ECS Zookeeper Service and Task

Parameters:
  Cluster:
    Description: ECS Cluster
    Type: String
  StackName:
    Description: The Parent Stack Name
    Type: String
  Cpu:
    Description: CPU (1024 = 1 core)
    Type: Number
    Default: 1024
  Memory:
    Description: Memory
    Type: Number
    Default: 4096
  DataVolumeMountPath:
    Description: Path to directory for mounting data
    Type: String
    MinLength: 1
    ConstraintDescription: Must be a valid folder path
  ServerId:
    Description: Server Id
    Type: Number
  ServerName:
    Description: Server Name
    Type: String
  ServerNames:
    Description: Server Names
    Type: String
  ClientPort:
    Description: Zookeeper client port
    Type: Number
    Default: 2181
  PeerPortOne:
    Description: Zookeeper first peer port
    Type: Number
    Default: 2888
  PeerPortTwo:
    Description: Zookeeper second peer port
    Type: Number
    Default: 3888
  LogGroup:
    Description: Log Group
    Type: String
  SecurityGroup:
    Description: Security Group
    Type: AWS::EC2::SecurityGroup::Id
  SubnetId:
    Description: SubnetId
    Type: AWS::EC2::Subnet::Id
  PrometheusJmxExporterPort:
    Description: The JMX port to use for metric collection
    Type: Number
    Default: 9404
  DomainName:
    Description: The domain name for Zookeeper hosts
    Type: String
Resources:
  ZkNodeTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      NetworkMode: awsvpc
      ContainerDefinitions:
      - Name: zookeeper
        Image: loyaltyone/cp-zookeeper:0.1-beta
        Cpu: !Ref 'Cpu'
        Memory: !Ref 'Memory'
        MemoryReservation: !Ref 'Memory'
        User: root
        DockerLabels:
          'discovery.service.name': !Ref 'ServerName'
        Environment:
          - Name: ZOOKEEPER_CLIENT_PORT
            Value: 2181
          - Name: ZOOKEEPER_SERVER_ID
            Value: !Ref 'ServerId'
          - Name: ZOOKEEPER_SERVERS
            Value: !Ref 'ServerNames'
          - Name: ZOOKEEPER_TICK_TIME
            Value: 2000
          - Name: ZOOKEEPER_INIT_LIMIT
            Value: 5
          - Name: ZOOKEEPER_SYNC_LIMIT
            Value: 2
#         - Name: KAFKA_JMX_OPTS
#           Value: !Sub '-javaagent:/usr/local/share/jmx_prometheus_javaagent-0.3.0.jar=${PrometheusJmxExporterPort}:/usr/local/share/zookeeper-metrics.yml'
          - Name: KAFKA_JMX_PORT
            Value: 8989
        PortMappings:
          - ContainerPort: !Ref 'ClientPort'
            HostPort: !Ref 'ClientPort'
          - ContainerPort: !Ref 'PeerPortOne'
            HostPort: !Ref 'PeerPortOne'
          - ContainerPort: !Ref 'PeerPortTwo'
            HostPort: !Ref 'PeerPortTwo'
          - ContainerPort: !Ref 'PrometheusJmxExporterPort'
            HostPort: !Ref 'PrometheusJmxExporterPort'
        MountPoints:
          - SourceVolume: data
            ContainerPath: /var/lib/zookeeper/data
          - SourceVolume: log
            ContainerPath: /var/lib/zookeeper/log
          - SourceVolume: secrets
            ContainerPath: /etc/zookeeper/secrets
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref 'LogGroup'
            awslogs-region: !Ref 'AWS::Region'
            awslogs-stream-prefix: !Sub 'zk${ServerId}'
      Volumes:
        # It's probably not a good idea to change these mounts and deploy against a live
        # cluster in production.
        - Name: data
          Host:
            SourcePath: !Sub '${DataVolumeMountPath}/zk/${ServerId}/data'
        - Name: log
          Host:
            SourcePath: !Sub '${DataVolumeMountPath}/zk/${ServerId}/log'
        - Name: secrets
          Host:
            SourcePath: !Sub '${DataVolumeMountPath}/zk/${ServerId}/secrets'
      Family: !Sub '${StackName}-zk-${ServerId}'
  ZkNodeService:
    Type: 'AWS::ECS::Service'
    Properties:
      ServiceName: !Sub '${StackName}-zk-${ServerId}'
      Cluster: !Ref 'Cluster'
      DesiredCount: 1
      TaskDefinition: !Ref 'ZkNodeTaskDefinition'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
             - !Ref 'SecurityGroup'
          Subnets:
             - !Ref 'SubnetId'
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
Outputs:
  ConnectionString:
    Description: The connection string for this Zookeeper node
    Value: !Sub '${ServerName}.${DomainName}:${ClientPort}'

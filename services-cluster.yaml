---
AWSTemplateFormatVersion: '2010-09-09'

Description: >
  This template deploys an ELB stack followed by a highly available ECS cluster using an AutoScaling Group, with
  ECS hosts distributed across multiple Availability Zones. The cluster is used to deploy components such as
  Schema Registry, Kafka Rest Proxy and Kafka Connect.
Parameters:
  # Parameter to force a rolling deployment
  RollingDeploymentVersion:
    Type: Number
    Description: >
      Change this value to force a rolling deployment when there are no changes to
      the launch configuration. Its best to just increment it from the previous value.
    MinValue: 0
    Default: 0
    ConstraintDescription: Must be a non-negative number
  HostedZoneStackName:
    Description: The Stack Name of the hosted zone in which to register services
    Type: String
  KeyName:
    Description: Key Pair name for SSH access
    Type: AWS::EC2::KeyPair::KeyName
  VPCId:
    Description: Choose which VPC this cluster should be deployed to
    Type: AWS::EC2::VPC::Id
  CertificateArn:
    Type: String
    Description: SSL certificates ARN to assign to ALB (See Certificate Mangager for the ARN)
  LoadBalancerType:
    Type: String
    Description: ECS ALB type
    Default: internal
    AllowedValues: [internet-facing, internal]
  PrivateSubnets:
    Description: Choose three private subnets this cluster should be deployed to
    Type: List<AWS::EC2::Subnet::Id>
  InstanceType:
    Description: Which instance type should we use to build the ECS clusters
    Type: String
    AllowedValues: [
      m3.large, m3.xlarge, m3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge,
      m5.large, m5.xlarge, m5.2xlarge,
      c3.large, c3.xlarge, c3.2xlarge,
      c4.large, c4.xlarge, c4.2xlarge,
      c5.large, c5.xlarge, c5.2xlarge,
      r3.large, r3.xlarge, r3.2xlarge,
      r4.large, r4.xlarge, r4.2xlarge,
    ]
    Default: m5.large
    ConstraintDescription: Must be a valid EC2 instance type
  EBSOptimizedInstance:
    Description: Enable EBS optimized flag. This will only work for instances that support it.
    Type: String
    AllowedValues: ['true', 'false']
    Default: true
    ConstraintDescription: Must be either 'true' or 'false'
  EBSVolumeSize:
    Description: Data volume size in GB for ECS instances. These will be exposed via EBSMountPath to containers.
    Type: Number
    MinValue: 25
    MaxValue: 2000
    Default: 100
    ConstraintDescription: Must be a value between 25 and 250
  ASGMinSize:
    Description: Minimum size of ECS Auto Scaling Group
    Type: Number
    Default: 3
  ASGMaxSize:
    Description: Maximum size of ECS Auto Scaling Group
    Type: Number
    Default: 3
  ASGDesiredCapacity:
    Description: Desired Capacity of the ECS Auto Scaling Group
    Type: Number
    Default: 3
  RollingUpdateMinInService:
    Description: Minimum instance in service during rolling update
    Type: Number
    Default: 2
  ASGEventsTopic:
    Type: String
    Description: SNS topic to notify of ASG events
  TargetGroupPrefix:
    Type: String
    MinLength: 1
    MaxLength: 24
    ConstraintDescription: Must be a unique prefix up to 24 characters to identify target groups for the cluster.
    Description: The prefix to use for target groups.
  InternalCidr0:
    Type: String
    Description: CIDR range to allow access to internal ELB
    Default: ''
  InternalCidr1:
    Type: String
    Description: CIDR range to allow access to internal ELB
    Default: ''
  InternalCidr2:
    Type: String
    Description: CIDR range to allow access to internal ELB
    Default: ''

  Project:
    Description: Project tag
    Type: String
    MinLength: 1
    ConstraintDescription: Must be a non-empty string
  Team:
    Description: Team tag
    Type: String
    MinLength: 1
    ConstraintDescription: Must be a non-empty string
  Environment:
    Description: Environment (dev|sandbox|prod)
    Type: String
    AllowedValues: ['dev','sandbox','prod']
    Default: dev
    ConstraintDescription: Must be one of dev|sandbox|prod.
  StackName:
    Description: The Parent Stack Name
    Type: String
  KinesisStackName:
    Type: String
    Description: Name of the CF stack used to create the Kinesis stream
  ZookeeperConnectionString:
    Description: 'Comma delimited list of Zookeeper node addresses'
    Type: String
  KafkaConnectionString:
    Description: 'Comma delimited list of Kafka broker addresses'
    Type: String
  InternalSG:
    Description: Security Group for internal access
    Type: AWS::EC2::SecurityGroup::Id
  BastionSG:
    Description: Security group used to whitelist for SSH access
    Type: AWS::EC2::SecurityGroup::Id

Resources:
  ELB:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: ./elb.yaml
      Parameters:
        VPCId: !Ref 'VPCId'
        LoadBalancerSubnets: !Join [",", [!Select [0, !Ref 'PrivateSubnets'], !Select [1, !Ref 'PrivateSubnets'], !Select [2, !Ref 'PrivateSubnets']]]
        LoadBalancerType: !Ref 'LoadBalancerType'
        CertificateArn: !Ref 'CertificateArn'
        TargetGroupPrefix: !Ref 'TargetGroupPrefix'
        Project: !Ref 'Project'
        Team: !Ref 'Team'
        Environment: !Ref 'Environment'
        Cidr0: !Ref 'InternalCidr0'
        Cidr1: !Ref 'InternalCidr1'
        Cidr2: !Ref 'InternalCidr2'
  ECS:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: ./ecs.yaml
      Parameters:
        KeyName: !Ref 'KeyName'
        VPCId: !Ref 'VPCId'
        Subnets: !Join [",", [!Select [0, !Ref 'PrivateSubnets'], !Select [1, !Ref 'PrivateSubnets'], !Select [2, !Ref 'PrivateSubnets']]]
        InstanceType: !Ref 'InstanceType'
        EBSOptimizedInstance: !Ref 'EBSOptimizedInstance'
        EBSVolumeSize: !Ref 'EBSVolumeSize'
        ASGMinSize: !Ref 'ASGMinSize'
        ASGMaxSize: !Ref 'ASGMaxSize'
        ASGDesiredCapacity: !Ref 'ASGDesiredCapacity'
        RollingUpdateMinInService: !Ref 'RollingUpdateMinInService'
        ASGEventsTopic: !Ref 'ASGEventsTopic'
        ClusterType: service
        Project: !Ref 'Project'
        Team: !Ref 'Team'
        Environment: !Ref 'Environment'
        HostedZoneId: !ImportValue
          'Fn::Sub': "${HostedZoneStackName}-ZoneId"
        RollingDeploymentVersion: !Ref 'RollingDeploymentVersion'
        AdditionalSecurityGroup: !Ref 'InternalSG'
        BastionSG: !Ref 'BastionSG'
        ELBSecurityGroupId: !GetAtt 'ELB.Outputs.ELBSecurityGroupId'
    DependsOn: 'ELB'

  SchemaRegistry:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: ./schema-registry/service.yaml
      Parameters:
        Cluster: !GetAtt 'ECS.Outputs.ClusterName'
        AppName: !Sub '${StackName}-schema-registry'
        Priority: '101'
        UIPriority: '102'
        KinesisStackName: !Ref 'KinesisStackName'
        HostedZoneStackName: !Ref 'HostedZoneStackName'
        Listener: !GetAtt 'ELB.Outputs.Listener'
        VpcId: !Ref 'VPCId'
        EcsServiceRole: !GetAtt 'ECS.Outputs.ServiceRole'
        LoadBalancerCanonicalHostedZoneID: !GetAtt 'ELB.Outputs.LoadBalancerCanonicalHostedZoneID'
        LoadBalancerDNSName: !GetAtt 'ELB.Outputs.LoadBalancerDNS'
        ZookeeperConnectionString: !Ref 'ZookeeperConnectionString'
    DependsOn: 'ECS'

  RestProxy:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: ./kafka-rest/service.yaml
      Parameters:
        Cluster: !GetAtt 'ECS.Outputs.ClusterName'
        AppName: !Sub '${StackName}-rest-proxy'
        Priority: '103'
        KinesisStackName: !Ref 'KinesisStackName'
        HostedZoneStackName: !Ref 'HostedZoneStackName'
        Listener: !GetAtt 'ELB.Outputs.Listener'
        VpcId: !Ref 'VPCId'
        EcsServiceRole: !GetAtt 'ECS.Outputs.ServiceRole'
        LoadBalancerCanonicalHostedZoneID: !GetAtt 'ELB.Outputs.LoadBalancerCanonicalHostedZoneID'
        LoadBalancerDNSName: !GetAtt 'ELB.Outputs.LoadBalancerDNS'
        ZookeeperConnectionString: !Ref 'ZookeeperConnectionString'
        KafkaConnectionString: !Ref 'KafkaConnectionString'
        SchemaRegistryUrl: !GetAtt 'SchemaRegistry.Outputs.URL'
    DependsOn: 'SchemaRegistry'

Outputs:
  SchemaRegistryURL:
    Description: The URL for the Schema Registry
    Value: !GetAtt 'SchemaRegistry.Outputs.URL'
  SchemaRegistryUIURL:
    Description: The URL for the Schema Registry UI
    Value: !GetAtt 'SchemaRegistry.Outputs.UIURL'
  KafkaRestURL:
    Description: The URL for the Kafka Rest Proxy
    Value: !GetAtt 'RestProxy.Outputs.URL'    
  Listener:
    Description: The ARN of the load balancer's listener
    Value: !GetAtt 'ELB.Outputs.Listener'
    Export:
      Name: !Sub '${AWS::StackName}-Listener'
  LoadBalancerDNS:
    Description: The dns name of the app load balancer for the service
    Value: !GetAtt 'ELB.Outputs.LoadBalancerDNS'
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerDNSName'
  LoadBalancerCanonicalHostedZoneID:
    Description: The hosted zone id of the app load balancer for the service
    Value: !GetAtt 'ELB.Outputs.LoadBalancerCanonicalHostedZoneID'
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerCanonicalHostedZoneID'
  LoadBalancerFullName:
    Description: The full name of the app load balancer
    Value: !GetAtt 'ELB.Outputs.LoadBalancerFullName'
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerFullName'
  ClusterName:
    Description: A reference to the ECS cluster
    Value: !Sub '${AWS::StackName}'
    Export:
      Name: !Sub '${AWS::StackName}-ClusterName'
  AutoScalingGroupName:
    Description: A reference to ECS AutoScaling Group Name
    Value: !GetAtt 'ECS.Outputs.AutoScalingGroupName'
    Export:
      Name: !Sub '${AWS::StackName}-AutoScalingGroupName'
  ServiceAutoScalingRole:
    Description: A reference to ECS service auto scaling role
    Value: !GetAtt 'ECS.Outputs.ServiceAutoScalingRole'
    Export:
      Name: !Sub '${AWS::StackName}-ServiceAutoScalingRole'
  ServiceSchedulerRole:
    Description: A reference to ECS service load balancing role
    Value: !GetAtt 'ECS.Outputs.ServiceSchedulerRole'
    Export:
      Name: !Sub '${AWS::StackName}-ServiceSchedulerRole'
  InstanceSecurityGroup:
    Description: The ID of the ecs container instance security group created
    Value: !GetAtt 'ECS.Outputs.InstanceSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-ECSSecurityGroupId'
  ServiceRole:
    Description: The ARN of the ECS service role
    Value: !GetAtt 'ECS.Outputs.ServiceRole'
    Export:
      Name: !Sub '${AWS::StackName}-EcsServiceRole'
  VpcId:
    Description: "Cluster's VPC Id"
    Value: !Ref 'VPCId'
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'